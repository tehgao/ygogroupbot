{
  "author": {
    "name": "Iain Collins",
    "email": "me@iaincollins.com",
    "url": "http://iaincollins.com"
  },
  "name": "tabletojson",
  "description": "Converts HTML tables to JSON objects",
  "version": "0.4.0",
  "main": "./lib/tabletojson.js",
  "keywords": [
    "table2json",
    "html",
    "table",
    "convert",
    "json",
    "csv"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/iaincollins/tabletojson.git"
  },
  "dependencies": {
    "cheerio": "0.19.0",
    "q": "1.4.1",
    "request": "2.67.0"
  },
  "engines": {
    "node": "*"
  },
  "readme": "# Table to JSON\n\nAttempts to convert HTML tables into JSON.\n\nCan be passed the markup for a single table as a string, a fragment of HTML or an entire page or just a URL (with an optional callback function; promises also supported).\n\nThe response is always an array. Every array entry in the response represents a table found on the page (in same the order they were found in the HTML).\n\n## Known issues / limitations\n\nThis module only supports parsing basic tables with a simple horizontal set of <th></th> headings and corresponding <td></td> cells.\n\nIt can give useless results on tables that have complex structures or multiple headers (such as on both X and Y axis).\n\nYou'll need to handle things like work out which tables to parse and (in most cases) clean up the data. You might want to combine it it with modules like json2csv.\n\nYou might want to use it with a module like 'cheerio' if you want to parse specific tables identified by id or class (i.e. select them with cheerio and pass the HTML of them as a string).\n\n## Example usage\n\n``` javascript\n// Convert an HTML blob into an array of all the tables on the page\nvar tabletojson = require('tabletojson');\nvar tablesAsJson = tabletojson.convert(html);\nvar firstTableAsJson = tablesAsJson[0];\nvar secondTableAsJson = tablesAsJson[1];\n...\n```\n\n``` javascript\n// Fetch a URL and parse all it's tables into JSON, using a callback\nvar tabletojson = require('tabletojson');\nvar url = 'https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes';\ntabletojson.convertUrl(url, function(tablesAsJson) {\n  var listofSovereignStates = tablesAsJson[0];\n});\n```\n\n``` javascript\n// Fetch a URL and parse all it's tables into JSON, using promises\nvar tabletojson = require('tabletojson');\nvar url = 'http://en.wikipedia.org/wiki/List_of_countries_by_credit_rating';\ntabletojson.convertUrl(url)\n.then(function(tablesAsJson) {\n  var standardAndPoorRatings = tablesAsJson[0];\n  var fitchRatings = tablesAsJson[1];\n});\n```\n\n``` javascript\n// Fetch a table from Wikipedia and combine with json2csv to convert to CSV\nvar tabletojson = require('tabletojson');\nvar json2csv = require('json2csv');\nvar url = 'http://en.wikipedia.org/wiki/List_of_countries_by_credit_rating';\ntabletojson.convertUrl(url)\n.then(function(tablesAsJson) {\n  var standardAndPoorCreditRatings = tablesAsJson[0];\n  json2csv({ data: standardAndPoorCreditRatings,\n             fields: [ 'Country', 'Outlook']\n           }, function(err, csv) {\n            console.log(csv);\n            /* Example output\n              \"Country\",\"Outlook\"\n              \"Abu Dhabi, UAE\",\"Stable\"\n              \"Albania\",\"Stable\"\n              \"Andorra\",\"Negative\"\n              \"Angola\",\"Stable\"\n              \"Argentina\",\"Negative\"\n              \"Aruba\",\"Stable\"\n              \"Australia\",\"Stable\"\n              \"Austria\",\"Negative\"\n              \"Azerbaijan\",\"Positive\"\n              ...\n            */\n          });\n});\n```\n\n# Contributing\n\nImprovements, fixes and suggestions for better written modules that other people have created are welcome, as are bug reports against specific tables it is unable to handle.\n\nIf there is enough interest and I get some examples that I'll improve the code and actually write some tests.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/iaincollins/tabletojson/issues"
  },
  "_id": "tabletojson@0.4.0",
  "_from": "tabletojson@"
}
